- name: "Ansible playbook example"
  hosts: 127.0.0.1
  connection: local
  vars:
    - ubuntu_release_name: bionic
    - vault_download: https://releases.hashicorp.com/vault/1.2.3/vault_1.2.3_linux_amd64.zip
    - vault_file: "{{ vault_download | basename }}"


  tasks:
    - name: Run "apt-get update"
      become: yes
      apt:
        update_cache: yes
        cache_valid_time: 3600
      ignore_errors: True

    - name: Install packages
      become: yes
      apt:
        state: latest
        pkg:
          - stow
          - vim
          - htop
          - shutter
          - conky-all
          - git
          - byobu
          - evolution-ews
          - guake
          - autokey-gtk
          - slack-desktop
          - ike-qtgui
          - fastboot
          - powerline
          - curl
          - unzip

    - name: Install Git related packages
      become: yes
      apt:
        state: latest
        pkg:
          - git
          - git-flow
          - git-hub
          - git-lfs

    - import_tasks: docker.yml
    - import_tasks: vs-code.yml
      vars:
        - vscode_gpg_location: /etc/apt/trusted.gpg.d
        - code_dir_tmp: /tmp/code
        - asc_file_tmp: microsoft.asc
        - vscdoe_gpg_filename: microsoft.gpg
        - vscode_list_file: /etc/apt/sources.list.d/vscode.list
    - import_tasks: hub.yml
      vars:
        - hub_release_url: "https://github.com/github/hub/releases/latest"
        - hub_strip_url: "https://github.com/github/hub/releases/tag/v"
    - import_tasks: google-chrome.yml
      vars:
        - google_chrome_list_file: google-chrome.list
        - chrome_apt_file: "/etc/apt/sources.list.d/{{ google_chrome_list_file }}"

    # - name: Install ngroak
      # become: yes
    # - name: download vault
    #   get_url:
    #     url: "{{ vault_download }}"
    #     dest: /tmp
    # - name: unzip vault download
    #   become: yes
    #   unarchive:
    #     src: /tmp/{{ vault_file }}
    #     dest: /usr/local/bin
    #     remote_src: yes
    # - name: set permissions and ownersip correct for vault executable
    #   become: yes
    #   file:
    #     path: /usr/local/bin/vault
    #     owner: vault
    #     group: vault
    #     mode: 0755
    # - name: set memlock capability on vault executable for security
    #   become: yes
    #   shell: >
    #     setcap cap_ipc_lock=+ep /usr/local/bin/vault
    # - name: create vault systemd service to run vault as system daemon
    #     become: true
    #     shell: |
    #       echo "[Unit]
    #       Description="a tool for managing secrets"
    #       Documentation=https://www.vaultproject.io/docs/
    #       Requires=network-online.target
    #       After=network-online.target
    #       ConditionFileNotEmpty=/etc/vault.d/vault.hcl

    #       [Service]
    #       User=vault
    #       Group=vault
    #       ProtectSystem=full
    #       ProtectHome=read-only
    #       PrivateTmp=yes
    #       PrivateDevices=yes
    #       SecureBits=keep-caps
    #       AmbientCapabilities=CAP_IPC_LOCK
    #       Capabilities=CAP_IPC_LOCK+ep
    #       CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
    #       NoNewPrivileges=yes
    #       ExecStart=/usr/local/bin/vault server -config=/etc/vault.d/vault.hcl
    #       ExecReload=/bin/kill --signal HUP $MAINPID
    #       KillMode=process
    #       KillSignal=SIGINT
    #       Restart=on-failure
    #       RestartSec=5
    #       TimeoutStopSec=30
    #       StartLimitIntervalSec=60
    #       StartLimitBurst=3
    #       LimitNOFILE=65536

    #       [Install]
    #       WantedBy=multi-user.target" > /etc/systemd/system/vault.service
    #     args:
    #       creates: /etc/systemd/system/vault.service
